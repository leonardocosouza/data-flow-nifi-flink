{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 50,
  "lineage": "713cafb3-1b7c-e122-3704-92d0ce96d73a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "random_password",
      "name": "airflow_fernetKey",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$FkSmQ9nzOMHYesTGnET.1eYW3nwlR2LYwTqwWXku9K.WJ1WvHxnH6",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "liSvHHMjJe0xuNtgILPlU1bxqV1JJPqc",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "data",
      "type": "utils_deep_merge_yaml",
      "name": "values",
      "provider": "provider[\"registry.terraform.io/cloudposse/utils\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append_list": true,
            "deep_copy_list": false,
            "id": "12dcbee359a73c75dd287dda6e8ae0b44a667110",
            "input": [
              "\"configs\":\n  \"rbac\":\n    \"policy.csv\": |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    \"policy.default\": \"\"\n    \"scopes\": \"[groups, cognito:groups, roles]\"\n  \"secret\":\n    \"extra\":\n      \"accounts.pipeline.tokens\": \"[{\\\"iat\\\":1704475884,\\\"id\\\":\\\"dc55c28b-711f-d50c-afd3-447ef4000509\\\"}]\"\n      \"server.secretkey\": \"HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD\"\n\"dex\":\n  \"enabled\": false\n\"extraObjects\":\n- \"apiVersion\": \"v1\"\n  \"data\":\n    \"plugin.yaml\": |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  \"kind\": \"ConfigMap\"\n  \"metadata\":\n    \"name\": \"kustomized-helm-cm\"\n\"repoServer\":\n  \"extraContainers\":\n  - \"command\":\n    - \"/var/run/argocd/argocd-cmp-server\"\n    \"image\": \"quay.io/argoproj/argocd:v2.6.6\"\n    \"name\": \"kustomized-helm-cmp\"\n    \"securityContext\":\n      \"runAsNonRoot\": true\n      \"runAsUser\": 999\n    \"volumeMounts\":\n    - \"mountPath\": \"/var/run/argocd\"\n      \"name\": \"var-files\"\n    - \"mountPath\": \"/home/argocd/cmp-server/plugins\"\n      \"name\": \"plugins\"\n    - \"mountPath\": \"/home/argocd/cmp-server/config/plugin.yaml\"\n      \"name\": \"kustomized-helm-volume\"\n      \"subPath\": \"plugin.yaml\"\n  \"volumes\":\n  - \"configMap\":\n      \"name\": \"kustomized-helm-cm\"\n    \"name\": \"kustomized-helm-volume\"\n\"server\":\n  \"config\":\n    \"accounts.pipeline\": \"apiKey\"\n    \"admin.enabled\": \"true\"\n    \"resource.customizations\": |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  \"extraArgs\":\n  - \"--insecure\"\n",
              "{}\n"
            ],
            "output": "configs:\n  rbac:\n    policy.csv: |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    policy.default: \"\"\n    scopes: '[groups, cognito:groups, roles]'\n  secret:\n    extra:\n      accounts.pipeline.tokens: '[{\"iat\":1704475884,\"id\":\"dc55c28b-711f-d50c-afd3-447ef4000509\"}]'\n      server.secretkey: HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD\ndex:\n  enabled: false\nextraObjects:\n- apiVersion: v1\n  data:\n    plugin.yaml: |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  kind: ConfigMap\n  metadata:\n    name: kustomized-helm-cm\nrepoServer:\n  extraContainers:\n  - command:\n    - /var/run/argocd/argocd-cmp-server\n    image: quay.io/argoproj/argocd:v2.6.6\n    name: kustomized-helm-cmp\n    securityContext:\n      runAsNonRoot: true\n      runAsUser: 999\n    volumeMounts:\n    - mountPath: /var/run/argocd\n      name: var-files\n    - mountPath: /home/argocd/cmp-server/plugins\n      name: plugins\n    - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n      name: kustomized-helm-volume\n      subPath: plugin.yaml\n  volumes:\n  - configMap:\n      name: kustomized-helm-cm\n    name: kustomized-helm-volume\nserver:\n  config:\n    accounts.pipeline: apiKey\n    admin.enabled: \"true\"\n    resource.customizations: |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  extraArgs:\n  - --insecure\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "input"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": true,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.7.9",
                "chart": "argo-cd",
                "name": "argocd",
                "namespace": "cicd",
                "revision": 1,
                "values": "{\"configs\":{\"rbac\":{\"policy.csv\":\"g, pipeline, role:admin\\ng, argocd-admin, role:admin\\ng, devops-stack-admins, role:admin\\n\",\"policy.default\":\"\",\"scopes\":\"[groups, cognito:groups, roles]\"},\"secret\":{\"extra\":{\"accounts.pipeline.tokens\":\"[{\\\"iat\\\":1704475884,\\\"id\\\":\\\"dc55c28b-711f-d50c-afd3-447ef4000509\\\"}]\",\"server.secretkey\":\"HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD\"}}},\"dex\":{\"enabled\":false},\"extraObjects\":[{\"apiVersion\":\"v1\",\"data\":{\"plugin.yaml\":\"apiVersion: argoproj.io/v1alpha1\\nkind: ConfigManagementPlugin\\nmetadata:\\n  name: kustomized-helm\\nspec:\\n  init:\\n    command: [\\\"/bin/sh\\\", \\\"-c\\\"]\\n    args: [\\\"helm dependency build || true\\\"]\\n  generate:\\n    command: [\\\"/bin/sh\\\", \\\"-c\\\"]\\n    args: [\\\"echo \\\\\\\"$ARGOCD_ENV_HELM_VALUES\\\\\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \\u003e all.yaml \\u0026\\u0026 kustomize build\\\"]\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"kustomized-helm-cm\"}}],\"repoServer\":{\"extraContainers\":[{\"command\":[\"/var/run/argocd/argocd-cmp-server\"],\"image\":\"quay.io/argoproj/argocd:v2.6.6\",\"name\":\"kustomized-helm-cmp\",\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999},\"volumeMounts\":[{\"mountPath\":\"/var/run/argocd\",\"name\":\"var-files\"},{\"mountPath\":\"/home/argocd/cmp-server/plugins\",\"name\":\"plugins\"},{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\",\"name\":\"kustomized-helm-volume\",\"subPath\":\"plugin.yaml\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"kustomized-helm-cm\"},\"name\":\"kustomized-helm-volume\"}]},\"server\":{\"config\":{\"accounts.pipeline\":\"apiKey\",\"admin.enabled\":\"true\",\"resource.customizations\":\"argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Progressing\\\"\\n    hs.message = \\\"\\\"\\n    if obj.status ~= nil then\\n      if obj.status.health ~= nil then\\n        hs.status = obj.status.health.status\\n        if obj.status.health.message ~= nil then\\n          hs.message = obj.status.health.message\\n        end\\n      end\\n    end\\n    return hs\\nnetworking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Healthy\\\"\\n    return hs\\n\"},\"extraArgs\":[\"--insecure\"]}}",
                "version": "5.42.0"
              }
            ],
            "name": "argocd",
            "namespace": "cicd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 10800,
            "values": [
              "configs:\n  rbac:\n    policy.csv: |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    policy.default: \"\"\n    scopes: '[groups, cognito:groups, roles]'\n  secret:\n    extra:\n      accounts.pipeline.tokens: '[{\"iat\":1704475884,\"id\":\"dc55c28b-711f-d50c-afd3-447ef4000509\"}]'\n      server.secretkey: HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD\ndex:\n  enabled: false\nextraObjects:\n- apiVersion: v1\n  data:\n    plugin.yaml: |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  kind: ConfigMap\n  metadata:\n    name: kustomized-helm-cm\nrepoServer:\n  extraContainers:\n  - command:\n    - /var/run/argocd/argocd-cmp-server\n    image: quay.io/argoproj/argocd:v2.6.6\n    name: kustomized-helm-cmp\n    securityContext:\n      runAsNonRoot: true\n      runAsUser: 999\n    volumeMounts:\n    - mountPath: /var/run/argocd\n      name: var-files\n    - mountPath: /home/argocd/cmp-server/plugins\n      name: plugins\n    - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n      name: kustomized-helm-volume\n      subPath: plugin.yaml\n  volumes:\n  - configMap:\n      name: kustomized-helm-cm\n    name: kustomized-helm-volume\nserver:\n  config:\n    accounts.pipeline: apiKey\n    admin.enabled: \"true\"\n    resource.customizations: |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  extraArgs:\n  - --insecure\n"
            ],
            "verify": false,
            "version": "5.42.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "jwt_hashed_token",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/camptocamp/jwt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "algorithm": "HS256",
            "claims_json": "{\"iat\":1704475884,\"iss\":\"argocd\",\"jti\":\"dc55c28b-711f-d50c-afd3-447ef4000509\",\"nbf\":1704475884,\"sub\":\"pipeline\"}",
            "id": "{\"iat\":1704475884,\"iss\":\"argocd\",\"jti\":\"dc55c28b-711f-d50c-afd3-447ef4000509\",\"nbf\":1704475884,\"sub\":\"pipeline\"}",
            "secret": "HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDQ0NzU4ODQsImlzcyI6ImFyZ29jZCIsImp0aSI6ImRjNTVjMjhiLTcxMWYtZDUwYy1hZmQzLTQ0N2VmNDAwMDUwOSIsIm5iZiI6MTcwNDQ3NTg4NCwic3ViIjoicGlwZWxpbmUifQ._Uh6sHlNX6-BHxpS04SR_Xgj4OghexmWsaPqs5rraB4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "null_resource",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2299101717914062952",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.helm_release.argocd",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "random_password",
      "name": "argocd_server_secretkey",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$ubEtpg6jB.rz00wcTw2Kku2FFhjTERDcAsZvF06ZR.OyZ46X6DRe.",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "HKXh1l5sozCZMp4pJhkh2yGp9iWQDFsD",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "random_uuid",
      "name": "jti",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "dc55c28b-711f-d50c-afd3-447ef4000509",
            "keepers": null,
            "result": "dc55c28b-711f-d50c-afd3-447ef4000509"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "time_static",
      "name": "iat",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "day": 5,
            "hour": 17,
            "id": "2024-01-05T17:31:24Z",
            "minute": 31,
            "month": 1,
            "rfc3339": "2024-01-05T17:31:24Z",
            "second": 24,
            "triggers": null,
            "unix": 1704475884,
            "year": 2024
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kind",
      "mode": "data",
      "type": "docker_network",
      "name": "kind",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "driver": "bridge",
            "id": "e67ae5ba8f66c04bde2d99f78a74af79e8092c196e094a65e199a258b696a18e",
            "internal": false,
            "ipam_config": [
              {
                "aux_address": {},
                "gateway": "",
                "ip_range": "",
                "subnet": "fc00:f853:ccd:e793::/64"
              },
              {
                "aux_address": {},
                "gateway": "172.18.0.1",
                "ip_range": "",
                "subnet": "172.18.0.0/16"
              }
            ],
            "name": "kind",
            "options": {
              "com.docker.network.bridge.enable_ip_masquerade": "true",
              "com.docker.network.driver.mtu": "65535"
            },
            "scope": "local"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kind",
      "mode": "managed",
      "type": "kind_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDITCCAgmgAwIBAgIIMPOSOJjPfDkwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDAxMDUxNzMxNTRaFw0yNTAxMDQxNzMxNTVaMDQx\nFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJzMRkwFwYDVQQDExBrdWJlcm5ldGVzLWFk\nbWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7PWJX+FIAiAE2O7c\n1jaTKlHjnxC1YJ0dUqkLZdQPSPMMFS5HSIOacM2oRYajxJoHCll2rGAU7ezZN8Dr\nk12obohWlqzWADZXfx+J7dj5mbQtapoKpwhH+jMHZOlSBKud7vC7+QP49LkNK3A8\nnK+34zUoISqh/BNCOIqUGphza7AfLg/KgxtrASCB9SJ0mXus4d2vHedT/kQ2p4ej\nuuK5y/SinTCcw7Kx3/4S7yPIJ3GyW0N62hv3ZKzOQQaUMHr6mCiTXtgaPPxkFojG\nO1IdaiZqmoHaaoU70WCOvFBNfd6Lio6tYtTkzKSs2rYe6KhINLbRDB6mJCPSzvVK\nhFaNbwIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQOO9JtB6ZBJ6vIXZpAqt7xWKHk\npzANBgkqhkiG9w0BAQsFAAOCAQEAM6OsuSIPCIal43PRXUApPBvXCq3cEZOeplJM\n2vMyPrJZ3xEMjduk1Y6NQcmqVxK6rZaIbgwoJGwhjRob29LsEpcxMPxIhBIovO/e\nNnFDXW9200O17tY4GLZb7naB9tvoMlvevtoqoUqgiGQQzhWGuyi446N74g742xtL\nGUR/oDYCm53zNgq2457YVf2DY/tRcekA+mYfmznxGWMWy6iy8Kfe2dK9iTXTJR3U\nD8znZGQoiKS76GaWb9AWL3C+cDM5GdHwuBYv6EbhTd1gjnWmIS7OBsIji0zKvLk6\nW4cLj8h5DRziinz1LnoJ0V9UGXdMtJHC/VnZGuXjCS6hfK48lA==\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpQIBAAKCAQEA7PWJX+FIAiAE2O7c1jaTKlHjnxC1YJ0dUqkLZdQPSPMMFS5H\nSIOacM2oRYajxJoHCll2rGAU7ezZN8Drk12obohWlqzWADZXfx+J7dj5mbQtapoK\npwhH+jMHZOlSBKud7vC7+QP49LkNK3A8nK+34zUoISqh/BNCOIqUGphza7AfLg/K\ngxtrASCB9SJ0mXus4d2vHedT/kQ2p4ejuuK5y/SinTCcw7Kx3/4S7yPIJ3GyW0N6\n2hv3ZKzOQQaUMHr6mCiTXtgaPPxkFojGO1IdaiZqmoHaaoU70WCOvFBNfd6Lio6t\nYtTkzKSs2rYe6KhINLbRDB6mJCPSzvVKhFaNbwIDAQABAoIBAQDZ5qjfPKElIyCS\nBIWbjzAhmJBCs/C22YQfgUfz6d/sa2RPDfGLI0ogNV5qIPf0UNfsknxo4yob6NOP\nS57WMygyDLnjcSiRpWcshWonCIHu8BtbjjABjcHyuH4yM8SyesaO9V1GDnsfQBR2\nP43dYFEvZLB0X2n6DhO1PuoW0t5AxT2S71CBLInDBM+WLqofVeSgkjq6AhTD2DUt\nny/lGT7DHINsSZnxuj7SB+iTchVOVBNWJzQ+HIZnNcJ+mlsTZpFAXByKtR5pqqqk\nVYJ5FYzkSlUSFYFP936CSNuQFcTTljn963gWG5t70/6oJal6LU+kBgX/tBydLmG1\n5KnQI3NRAoGBAP4lywGlK+rnG3DO/h8bYqOiMkkO7a/x8+u/SQUPpL5DskHAVmns\nwKLYoOFxUAHJDas2lvhiT7QdUVxJQ9sAQ67ZENJMAjV3eI28Idfyng3YuRrpGaVG\nAykRpSRYocvcvdTxcVqtG49HxwjkeLaNaJ+KokNF8mUB/gW01pNQQrDFAoGBAO6v\nrA1Hzdywd5gzTyRwRnibo9crOEauVsMP6vcKJqDoTlAA/z9J5CHJOT7dzvrppVgS\ncJrhAUg3QdlXcZmAIuLyzNXmx0a9gep9+zX1nZkufV7utZjiTnFqyV26EYcr24sX\nVkT/6NFuRP8pizrE9PlknwH0G8V/uSVyhA2gYACjAoGBAPA50vDEKoYIW2S/E29d\n2FfpyXRLOxpzLmfo0GGLTuJVZNpHrqbDFbcX4sIV9FUrsNLkb8FqVAJhL/V2f0Az\nuMY+AWt2UyQswHPgn3DasNFPyHAKY6ZYTkZ0mk+Hw6/KAFmWutnGBOXjJ9xc8UlE\n0t7zELtcE2msf2rva1+lntQtAoGAZJauGG6xSBcqX38IFGAoor1cv9ob/lWMhOoZ\naIDjpJ4iGr9A0oguVzq5IFBT4RRENSiYQf0fEDMRUiny2vDQQvp17pMyWhKVRKBR\nFP1srFiWR0KsT0DYNB3/vLskleWawTRVjACZOmGRPENixKKqZsvL4wPgDEx2V1y6\nYA+9RacCgYEA8MoaiwNLmO/IDU/J7yNK2KMOBArd6KPn4AaPiloETzvPryIMCMad\nUYK4vGz8OF4m2vXJxFaCxUK57bYUYdgEBsz+73dw6NgQCCNBdt3tSnrmtYDID3WP\nawju5Xfx4hIX9Xv2Tiy6TwUobGrJoWtKbQx+99KMUH9x6EqrFhslwGU=\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTI0MDEwNTE3MzE1NFoXDTM0MDEwMjE3MzE1NFowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL03\njlNQjh0wTYOk+qylDUJUSvtbsdxMXz2kLJAO7/wNJztSxC2MGN9Ng+ep1ihHWDkc\nktSZtqOrTi43UlRknnck14EKK6HL2KVepei1icJdfLTgbEdfwnAhbZ6/M5ht9NpK\nsea/EVmWJQ4xBFvl74WX0uzVFSm62ds+FQQqEfZvaa5sWOjvzhGmb/Z44QXIDu49\n1Vj4UswqZorb2QHuZjczsi8fcqAfv3hMviFwf5ixqcwjp8v7HZ6hYVN+CXugdndr\nDBcH+k4VtCE+IH4I9g/X2/pH3k8Yz+S7kc9fX7RNaiTMxT09Ap2z8rapMgCS5FLK\nsOBjzAV6UF7x4LvtyxkCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFA470m0HpkEnq8hdmkCq3vFYoeSnMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAK+vU36Ncea+E1eIh1sg\noouYB1DOUWbdBbpCTD+dVsskNX6rQuzqO7YvAg76Y+SwLsHMNcQ1Ku4T82fW3HLC\nXdkaTPJjhbgjG53xWWh1uqEXFmhLKEYMUQuvWPhbGhpM/eNt3yMDasamMfxoDzda\nRmB9qp7Z6sUsjFBt2brm0yL+usqr7Y6krGJOq4dBFT/nKL/v1/+JajKN5JWzFbov\nf731nT08EaNEIGgxJRJ6lqXsMCT9KuzfL8UVMSL6QuevPm6E5UM/YAuIXcW67+X2\n6X/CZuon787qc2bsoZc/cRjXf1FArz8iMy2p/pqOKrx+dC82p661/+4m8O7pFmOH\ndEk=\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:61993",
            "id": "kind-kindest/node:v1.27.1",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": [],
                "feature_gates": {},
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {},
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": [],
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  }
                ],
                "runtime_config": {}
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJME1ERXdOVEUzTXpFMU5Gb1hEVE0wTURFd01qRTNNekUxTkZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDAzCmpsTlFqaDB3VFlPaytxeWxEVUpVU3Z0YnNkeE1YejJrTEpBTzcvd05KenRTeEMyTUdOOU5nK2VwMWloSFdEa2MKa3RTWnRxT3JUaTQzVWxSa25uY2sxNEVLSzZITDJLVmVwZWkxaWNKZGZMVGdiRWRmd25BaGJaNi9NNWh0OU5wSwpzZWEvRVZtV0pRNHhCRnZsNzRXWDB1elZGU202MmRzK0ZRUXFFZlp2YWE1c1dPanZ6aEdtYi9aNDRRWElEdTQ5CjFWajRVc3dxWm9yYjJRSHVaamN6c2k4ZmNxQWZ2M2hNdmlGd2Y1aXhxY3dqcDh2N0haNmhZVk4rQ1h1Z2RuZHIKREJjSCtrNFZ0Q0UrSUg0STlnL1gyL3BIM2s4WXorUzdrYzlmWDdSTmFpVE14VDA5QXAyejhyYXBNZ0NTNUZMSwpzT0JqekFWNlVGN3g0THZ0eXhrQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZBNDcwbTBIcGtFbnE4aGRta0NxM3ZGWW9lU25NQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSyt2VTM2TmNlYStFMWVJaDFzZwpvb3VZQjFET1VXYmRCYnBDVEQrZFZzc2tOWDZyUXV6cU83WXZBZzc2WStTd0xzSE1OY1ExS3U0VDgyZlczSExDClhka2FUUEpqaGJnakc1M3hXV2gxdXFFWEZtaExLRVlNVVF1dldQaGJHaHBNL2VOdDN5TURhc2FtTWZ4b0R6ZGEKUm1COXFwN1o2c1VzakZCdDJicm0weUwrdXNxcjdZNmtyR0pPcTRkQkZUL25LTC92MS8rSmFqS041Sld6RmJvdgpmNzMxblQwOEVhTkVJR2d4SlJKNmxxWHNNQ1Q5S3V6Zkw4VVZNU0w2UXVldlBtNkU1VU0vWUF1SVhjVzY3K1gyCjZYL0NadW9uNzg3cWMyYnNvWmMvY1JqWGYxRkFyejhpTXkycC9wcU9LcngrZEM4MnA2NjEvKzRtOE83cEZtT0gKZEVrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://127.0.0.1:61993\n  name: kind-kind\ncontexts:\n- context:\n    cluster: kind-kind\n    user: kind-kind\n  name: kind-kind\ncurrent-context: kind-kind\nkind: Config\npreferences: {}\nusers:\n- name: kind-kind\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJTVBPU09KalBmRGt3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1EVXhOek14TlRSYUZ3MHlOVEF4TURReE56TXhOVFZhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTdQV0pYK0ZJQWlBRTJPN2MKMWphVEtsSGpueEMxWUowZFVxa0xaZFFQU1BNTUZTNUhTSU9hY00yb1JZYWp4Sm9IQ2xsMnJHQVU3ZXpaTjhEcgprMTJvYm9oV2xxeldBRFpYZngrSjdkajVtYlF0YXBvS3B3aEgrak1IWk9sU0JLdWQ3dkM3K1FQNDlMa05LM0E4Cm5LKzM0elVvSVNxaC9CTkNPSXFVR3BoemE3QWZMZy9LZ3h0ckFTQ0I5U0owbVh1czRkMnZIZWRUL2tRMnA0ZWoKdXVLNXkvU2luVENjdzdLeDMvNFM3eVBJSjNHeVcwTjYyaHYzWkt6T1FRYVVNSHI2bUNpVFh0Z2FQUHhrRm9qRwpPMUlkYWlacW1vSGFhb1U3MFdDT3ZGQk5mZDZMaW82dFl0VGt6S1NzMnJZZTZLaElOTGJSREI2bUpDUFN6dlZLCmhGYU5id0lEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRT085SnRCNlpCSjZ2SVhacEFxdDd4V0tIawpwekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTTZPc3VTSVBDSWFsNDNQUlhVQXBQQnZYQ3EzY0VaT2VwbEpNCjJ2TXlQckpaM3hFTWpkdWsxWTZOUWNtcVZ4SzZyWmFJYmd3b0pHd2hqUm9iMjlMc0VwY3hNUHhJaEJJb3ZPL2UKTm5GRFhXOTIwME8xN3RZNEdMWmI3bmFCOXR2b01sdmV2dG9xb1VxZ2lHUVF6aFdHdXlpNDQ2Tjc0Zzc0Mnh0TApHVVIvb0RZQ201M3pOZ3EyNDU3WVZmMkRZL3RSY2VrQSttWWZtem54R1dNV3k2aXk4S2ZlMmRLOWlUWFRKUjNVCkQ4em5aR1FvaUtTNzZHYVdiOUFXTDNDK2NETTVHZEh3dUJZdjZFYmhUZDFnam5XbUlTN09Cc0lqaTB6S3ZMazYKVzRjTGo4aDVEUnppaW56MUxub0owVjlVR1hkTXRKSEMvVm5aR3VYakNTNmhmSzQ4bEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN1BXSlgrRklBaUFFMk83YzFqYVRLbEhqbnhDMVlKMGRVcWtMWmRRUFNQTU1GUzVIClNJT2FjTTJvUllhanhKb0hDbGwyckdBVTdlelpOOERyazEyb2JvaFdscXpXQURaWGZ4K0o3ZGo1bWJRdGFwb0sKcHdoSCtqTUhaT2xTQkt1ZDd2QzcrUVA0OUxrTkszQThuSyszNHpVb0lTcWgvQk5DT0lxVUdwaHphN0FmTGcvSwpneHRyQVNDQjlTSjBtWHVzNGQydkhlZFQva1EycDRlanV1SzV5L1NpblRDY3c3S3gzLzRTN3lQSUozR3lXME42CjJodjNaS3pPUVFhVU1IcjZtQ2lUWHRnYVBQeGtGb2pHTzFJZGFpWnFtb0hhYW9VNzBXQ092RkJOZmQ2TGlvNnQKWXRUa3pLU3MyclllNktoSU5MYlJEQjZtSkNQU3p2VktoRmFOYndJREFRQUJBb0lCQVFEWjVxamZQS0VsSXlDUwpCSVdianpBaG1KQkNzL0MyMllRZmdVZno2ZC9zYTJSUERmR0xJMG9nTlY1cUlQZjBVTmZza254bzR5b2I2Tk9QClM1N1dNeWd5RExuamNTaVJwV2NzaFdvbkNJSHU4QnRiampBQmpjSHl1SDR5TThTeWVzYU85VjFHRG5zZlFCUjIKUDQzZFlGRXZaTEIwWDJuNkRoTzFQdW9XMHQ1QXhUMlM3MUNCTEluREJNK1dMcW9mVmVTZ2tqcTZBaFREMkRVdApueS9sR1Q3REhJTnNTWm54dWo3U0IraVRjaFZPVkJOV0p6UStISVpuTmNKK21sc1RacEZBWEJ5S3RSNXBxcXFrClZZSjVGWXprU2xVU0ZZRlA5MzZDU051UUZjVFRsam45NjNnV0c1dDcwLzZvSmFsNkxVK2tCZ1gvdEJ5ZExtRzEKNUtuUUkzTlJBb0dCQVA0bHl3R2xLK3JuRzNETy9oOGJZcU9pTWtrTzdhL3g4K3UvU1FVUHBMNURza0hBVm1ucwp3S0xZb09GeFVBSEpEYXMybHZoaVQ3UWRVVnhKUTlzQVE2N1pFTkpNQWpWM2VJMjhJZGZ5bmczWXVScnBHYVZHCkF5a1JwU1JZb2N2Y3ZkVHhjVnF0RzQ5SHh3amtlTGFOYUorS29rTkY4bVVCL2dXMDFwTlFRckRGQW9HQkFPNnYKckExSHpkeXdkNWd6VHlSd1JuaWJvOWNyT0VhdVZzTVA2dmNLSnFEb1RsQUEvejlKNUNISk9UN2R6dnJwcFZnUwpjSnJoQVVnM1FkbFhjWm1BSXVMeXpOWG14MGE5Z2VwOSt6WDFuWmt1ZlY3dXRaamlUbkZxeVYyNkVZY3IyNHNYClZrVC82TkZ1UlA4cGl6ckU5UGxrbndIMEc4Vi91U1Z5aEEyZ1lBQ2pBb0dCQVBBNTB2REVLb1lJVzJTL0UyOWQKMkZmcHlYUkxPeHB6TG1mbzBHR0xUdUpWWk5wSHJxYkRGYmNYNHNJVjlGVXJzTkxrYjhGcVZBSmhML1YyZjBBegp1TVkrQVd0MlV5UXN3SFBnbjNEYXNORlB5SEFLWTZaWVRrWjBtaytIdzYvS0FGbVd1dG5HQk9Yako5eGM4VWxFCjB0N3pFTHRjRTJtc2YycnZhMStsbnRRdEFvR0FaSmF1R0c2eFNCY3FYMzhJRkdBb29yMWN2OW9iL2xXTWhPb1oKYUlEanBKNGlHcjlBMG9ndVZ6cTVJRkJUNFJSRU5TaVlRZjBmRURNUlVpbnkydkRRUXZwMTdwTXlXaEtWUktCUgpGUDFzckZpV1IwS3NUMERZTkIzL3ZMc2tsZVdhd1RSVmpBQ1pPbUdSUEVOaXhLS3Fac3ZMNHdQZ0RFeDJWMXk2CllBKzlSYWNDZ1lFQThNb2Fpd05MbU8vSURVL0o3eU5LMktNT0JBcmQ2S1BuNEFhUGlsb0VUenZQcnlJTUNNYWQKVVlLNHZHejhPRjRtMnZYSnhGYUN4VUs1N2JZVVlkZ0VCc3orNzNkdzZOZ1FDQ05CZHQzdFNucm10WURJRDNXUAphd2p1NVhmeDRoSVg5WHYyVGl5NlR3VW9iR3JKb1d0S2JReCs5OUtNVUg5eDZFcXJGaHNsd0dVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n",
            "kubeconfig_path": "/Users/leonardocosouza/PycharmProjects/data-flow-nifi-flink/kind-config",
            "name": "kind",
            "node_image": "kindest/node:v1.27.1",
            "timeouts": null,
            "wait_for_ready": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "data",
      "type": "kubernetes_service",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.traefik",
      "mode": "data",
      "type": "utils_deep_merge_yaml",
      "name": "values",
      "provider": "provider[\"registry.terraform.io/cloudposse/utils\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append_list": false,
            "deep_copy_list": false,
            "id": "9ca690fc3267cb252cc52305f87dde1b289a5b7b",
            "input": [
              "\"traefik\":\n  \"additionalArguments\":\n  - \"--serversTransport.insecureSkipVerify=true\"\n  \"deployment\":\n    \"replicas\": \"2\"\n  \"fullnameOverride\": \"traefik\"\n  \"logs\":\n    \"access\":\n      \"enabled\": true\n  \"metrics\":\n    \"prometheus\":\n      \"service\":\n        \"enabled\": true\n      \"serviceMonitor\": {}\n  \"middlewares\":\n    \"redirections\":\n      \"withclustername\":\n        \"permanent\": false\n        \"regex\": \"apps.172-29-0-100.nip.io\"\n        \"replacement\": \"apps.kind.172-29-0-100.nip.io\"\n  \"ressources\":\n    \"limits\":\n      \"cpu\": \"250m\"\n      \"memory\": \"512Mi\"\n    \"requests\":\n      \"cpu\": \"125m\"\n      \"memory\": \"256Mi\"\n  \"tlsOptions\":\n    \"default\":\n      \"minVersion\": \"VersionTLS12\"\n"
            ],
            "output": "traefik:\n  additionalArguments:\n  - --serversTransport.insecureSkipVerify=true\n  deployment:\n    replicas: \"2\"\n  fullnameOverride: traefik\n  logs:\n    access:\n      enabled: true\n  metrics:\n    prometheus:\n      service:\n        enabled: true\n      serviceMonitor: {}\n  middlewares:\n    redirections:\n      withclustername:\n        permanent: false\n        regex: apps.172-29-0-100.nip.io\n        replacement: apps.kind.172-29-0-100.nip.io\n  ressources:\n    limits:\n      cpu: 250m\n      memory: 512Mi\n    requests:\n      cpu: 125m\n      memory: 256Mi\n  tlsOptions:\n    default:\n      minVersion: VersionTLS12\n"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "argocd_project",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/oboukili/argocd\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "traefik",
            "metadata": [
              {
                "annotations": {
                  "modern-devops-stack.io/argocd_namespace": "cicd"
                },
                "generation": 1,
                "labels": {},
                "name": "traefik",
                "namespace": "cicd",
                "resource_version": "858",
                "uid": "3c7c0a24-2260-44d7-aae9-ce6bc0de4118"
              }
            ],
            "spec": [
              {
                "cluster_resource_blacklist": [],
                "cluster_resource_whitelist": [
                  {
                    "group": "*",
                    "kind": "*"
                  }
                ],
                "description": "Traefik application project",
                "destination": [
                  {
                    "name": "in-cluster",
                    "namespace": "traefik",
                    "server": ""
                  }
                ],
                "namespace_resource_blacklist": [],
                "namespace_resource_whitelist": [],
                "orphaned_resources": [
                  {
                    "ignore": [],
                    "warn": true
                  }
                ],
                "role": [],
                "signature_keys": [],
                "source_namespaces": [],
                "source_repos": [
                  "https://github.com/leonardocosouza/data-flow-nifi-flink.git"
                ],
                "sync_window": []
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.helm_release.argocd",
            "module.argocd_bootstrap.jwt_hashed_token.argocd",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "null_resource",
      "name": "dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7838906223470845721",
            "triggers": {}
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "null_resource",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": []
    }
  ],
  "check_results": null
}
