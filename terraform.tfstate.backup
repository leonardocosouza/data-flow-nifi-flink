{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 15,
  "lineage": "713cafb3-1b7c-e122-3704-92d0ce96d73a",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "random_password",
      "name": "airflow_fernetKey",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$aZCAxo88Z6ns0Pzc2F2Xpe2ehKVPHOKd9HvIKT7FqJlejLZawtv4K",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "GVCJkBYG2pdsNW7oVmXufytwnYHuRJoV",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "data",
      "type": "utils_deep_merge_yaml",
      "name": "values",
      "provider": "provider[\"registry.terraform.io/cloudposse/utils\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append_list": true,
            "deep_copy_list": false,
            "id": "25d2ff0d93e786957c2979cce2e8d18c469345ce",
            "input": [
              "\"configs\":\n  \"rbac\":\n    \"policy.csv\": |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    \"policy.default\": \"\"\n    \"scopes\": \"[groups, cognito:groups, roles]\"\n  \"secret\":\n    \"extra\":\n      \"accounts.pipeline.tokens\": \"[{\\\"iat\\\":1704473058,\\\"id\\\":\\\"fe28563e-7474-691c-664a-59149841f3d2\\\"}]\"\n      \"server.secretkey\": \"uF54B9RppALG5ymfMlGoMC9MlZtbhPuA\"\n\"dex\":\n  \"enabled\": false\n\"extraObjects\":\n- \"apiVersion\": \"v1\"\n  \"data\":\n    \"plugin.yaml\": |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  \"kind\": \"ConfigMap\"\n  \"metadata\":\n    \"name\": \"kustomized-helm-cm\"\n\"repoServer\":\n  \"extraContainers\":\n  - \"command\":\n    - \"/var/run/argocd/argocd-cmp-server\"\n    \"image\": \"quay.io/argoproj/argocd:v2.6.6\"\n    \"name\": \"kustomized-helm-cmp\"\n    \"securityContext\":\n      \"runAsNonRoot\": true\n      \"runAsUser\": 999\n    \"volumeMounts\":\n    - \"mountPath\": \"/var/run/argocd\"\n      \"name\": \"var-files\"\n    - \"mountPath\": \"/home/argocd/cmp-server/plugins\"\n      \"name\": \"plugins\"\n    - \"mountPath\": \"/home/argocd/cmp-server/config/plugin.yaml\"\n      \"name\": \"kustomized-helm-volume\"\n      \"subPath\": \"plugin.yaml\"\n  \"volumes\":\n  - \"configMap\":\n      \"name\": \"kustomized-helm-cm\"\n    \"name\": \"kustomized-helm-volume\"\n\"server\":\n  \"config\":\n    \"accounts.pipeline\": \"apiKey\"\n    \"admin.enabled\": \"true\"\n    \"resource.customizations\": |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  \"extraArgs\":\n  - \"--insecure\"\n",
              "{}\n"
            ],
            "output": "configs:\n  rbac:\n    policy.csv: |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    policy.default: \"\"\n    scopes: '[groups, cognito:groups, roles]'\n  secret:\n    extra:\n      accounts.pipeline.tokens: '[{\"iat\":1704473058,\"id\":\"fe28563e-7474-691c-664a-59149841f3d2\"}]'\n      server.secretkey: uF54B9RppALG5ymfMlGoMC9MlZtbhPuA\ndex:\n  enabled: false\nextraObjects:\n- apiVersion: v1\n  data:\n    plugin.yaml: |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  kind: ConfigMap\n  metadata:\n    name: kustomized-helm-cm\nrepoServer:\n  extraContainers:\n  - command:\n    - /var/run/argocd/argocd-cmp-server\n    image: quay.io/argoproj/argocd:v2.6.6\n    name: kustomized-helm-cmp\n    securityContext:\n      runAsNonRoot: true\n      runAsUser: 999\n    volumeMounts:\n    - mountPath: /var/run/argocd\n      name: var-files\n    - mountPath: /home/argocd/cmp-server/plugins\n      name: plugins\n    - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n      name: kustomized-helm-volume\n      subPath: plugin.yaml\n  volumes:\n  - configMap:\n      name: kustomized-helm-cm\n    name: kustomized-helm-volume\nserver:\n  config:\n    accounts.pipeline: apiKey\n    admin.enabled: \"true\"\n    resource.customizations: |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  extraArgs:\n  - --insecure\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "input"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": true,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.7.9",
                "chart": "argo-cd",
                "name": "argocd",
                "namespace": "cicd",
                "revision": 1,
                "values": "{\"configs\":{\"rbac\":{\"policy.csv\":\"g, pipeline, role:admin\\ng, argocd-admin, role:admin\\ng, devops-stack-admins, role:admin\\n\",\"policy.default\":\"\",\"scopes\":\"[groups, cognito:groups, roles]\"},\"secret\":{\"extra\":{\"accounts.pipeline.tokens\":\"[{\\\"iat\\\":1704473058,\\\"id\\\":\\\"fe28563e-7474-691c-664a-59149841f3d2\\\"}]\",\"server.secretkey\":\"uF54B9RppALG5ymfMlGoMC9MlZtbhPuA\"}}},\"dex\":{\"enabled\":false},\"extraObjects\":[{\"apiVersion\":\"v1\",\"data\":{\"plugin.yaml\":\"apiVersion: argoproj.io/v1alpha1\\nkind: ConfigManagementPlugin\\nmetadata:\\n  name: kustomized-helm\\nspec:\\n  init:\\n    command: [\\\"/bin/sh\\\", \\\"-c\\\"]\\n    args: [\\\"helm dependency build || true\\\"]\\n  generate:\\n    command: [\\\"/bin/sh\\\", \\\"-c\\\"]\\n    args: [\\\"echo \\\\\\\"$ARGOCD_ENV_HELM_VALUES\\\\\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \\u003e all.yaml \\u0026\\u0026 kustomize build\\\"]\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"kustomized-helm-cm\"}}],\"repoServer\":{\"extraContainers\":[{\"command\":[\"/var/run/argocd/argocd-cmp-server\"],\"image\":\"quay.io/argoproj/argocd:v2.6.6\",\"name\":\"kustomized-helm-cmp\",\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":999},\"volumeMounts\":[{\"mountPath\":\"/var/run/argocd\",\"name\":\"var-files\"},{\"mountPath\":\"/home/argocd/cmp-server/plugins\",\"name\":\"plugins\"},{\"mountPath\":\"/home/argocd/cmp-server/config/plugin.yaml\",\"name\":\"kustomized-helm-volume\",\"subPath\":\"plugin.yaml\"}]}],\"volumes\":[{\"configMap\":{\"name\":\"kustomized-helm-cm\"},\"name\":\"kustomized-helm-volume\"}]},\"server\":{\"config\":{\"accounts.pipeline\":\"apiKey\",\"admin.enabled\":\"true\",\"resource.customizations\":\"argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Progressing\\\"\\n    hs.message = \\\"\\\"\\n    if obj.status ~= nil then\\n      if obj.status.health ~= nil then\\n        hs.status = obj.status.health.status\\n        if obj.status.health.message ~= nil then\\n          hs.message = obj.status.health.message\\n        end\\n      end\\n    end\\n    return hs\\nnetworking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Healthy\\\"\\n    return hs\\n\"},\"extraArgs\":[\"--insecure\"]}}",
                "version": "5.42.0"
              }
            ],
            "name": "argocd",
            "namespace": "cicd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 10800,
            "values": [
              "configs:\n  rbac:\n    policy.csv: |\n      g, pipeline, role:admin\n      g, argocd-admin, role:admin\n      g, devops-stack-admins, role:admin\n    policy.default: \"\"\n    scopes: '[groups, cognito:groups, roles]'\n  secret:\n    extra:\n      accounts.pipeline.tokens: '[{\"iat\":1704473058,\"id\":\"fe28563e-7474-691c-664a-59149841f3d2\"}]'\n      server.secretkey: uF54B9RppALG5ymfMlGoMC9MlZtbhPuA\ndex:\n  enabled: false\nextraObjects:\n- apiVersion: v1\n  data:\n    plugin.yaml: |\n      apiVersion: argoproj.io/v1alpha1\n      kind: ConfigManagementPlugin\n      metadata:\n        name: kustomized-helm\n      spec:\n        init:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"helm dependency build || true\"]\n        generate:\n          command: [\"/bin/sh\", \"-c\"]\n          args: [\"echo \\\"$ARGOCD_ENV_HELM_VALUES\\\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $ARGOCD_ENV_HELM_ARGS -f - --include-crds \u003e all.yaml \u0026\u0026 kustomize build\"]\n  kind: ConfigMap\n  metadata:\n    name: kustomized-helm-cm\nrepoServer:\n  extraContainers:\n  - command:\n    - /var/run/argocd/argocd-cmp-server\n    image: quay.io/argoproj/argocd:v2.6.6\n    name: kustomized-helm-cmp\n    securityContext:\n      runAsNonRoot: true\n      runAsUser: 999\n    volumeMounts:\n    - mountPath: /var/run/argocd\n      name: var-files\n    - mountPath: /home/argocd/cmp-server/plugins\n      name: plugins\n    - mountPath: /home/argocd/cmp-server/config/plugin.yaml\n      name: kustomized-helm-volume\n      subPath: plugin.yaml\n  volumes:\n  - configMap:\n      name: kustomized-helm-cm\n    name: kustomized-helm-volume\nserver:\n  config:\n    accounts.pipeline: apiKey\n    admin.enabled: \"true\"\n    resource.customizations: |\n      argoproj.io/Application: # https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#argocd-app\n        health.lua: |\n          hs = {}\n          hs.status = \"Progressing\"\n          hs.message = \"\"\n          if obj.status ~= nil then\n            if obj.status.health ~= nil then\n              hs.status = obj.status.health.status\n              if obj.status.health.message ~= nil then\n                hs.message = obj.status.health.message\n              end\n            end\n          end\n          return hs\n      networking.k8s.io/Ingress: # https://argo-cd.readthedocs.io/en/stable/faq/#why-is-my-application-stuck-in-progressing-state\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs\n  extraArgs:\n  - --insecure\n"
            ],
            "verify": false,
            "version": "5.42.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "jwt_hashed_token",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/camptocamp/jwt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "algorithm": "HS256",
            "claims_json": "{\"iat\":1704473058,\"iss\":\"argocd\",\"jti\":\"fe28563e-7474-691c-664a-59149841f3d2\",\"nbf\":1704473058,\"sub\":\"pipeline\"}",
            "id": "{\"iat\":1704473058,\"iss\":\"argocd\",\"jti\":\"fe28563e-7474-691c-664a-59149841f3d2\",\"nbf\":1704473058,\"sub\":\"pipeline\"}",
            "secret": "uF54B9RppALG5ymfMlGoMC9MlZtbhPuA",
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE3MDQ0NzMwNTgsImlzcyI6ImFyZ29jZCIsImp0aSI6ImZlMjg1NjNlLTc0NzQtNjkxYy02NjRhLTU5MTQ5ODQxZjNkMiIsIm5iZiI6MTcwNDQ3MzA1OCwic3ViIjoicGlwZWxpbmUifQ.5Sx5apHTawi7rPX6EeyuL56X_zKAg-08ngHPl8HNkAU"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "secret"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "null_resource",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "6440763636397568288",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.helm_release.argocd",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "random_password",
      "name": "argocd_server_secretkey",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$JPJeEI32fQyJafcgXDHl5.JbZp97VUJdQtO3S4QzlvH7p4II3vqvm",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "uF54B9RppALG5ymfMlGoMC9MlZtbhPuA",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "random_uuid",
      "name": "jti",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "fe28563e-7474-691c-664a-59149841f3d2",
            "keepers": null,
            "result": "fe28563e-7474-691c-664a-59149841f3d2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argocd_bootstrap",
      "mode": "managed",
      "type": "time_static",
      "name": "iat",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "day": 5,
            "hour": 16,
            "id": "2024-01-05T16:44:18Z",
            "minute": 44,
            "month": 1,
            "rfc3339": "2024-01-05T16:44:18Z",
            "second": 18,
            "triggers": null,
            "unix": 1704473058,
            "year": 2024
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kind",
      "mode": "data",
      "type": "docker_network",
      "name": "kind",
      "provider": "provider[\"registry.terraform.io/kreuzwerker/docker\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "driver": "bridge",
            "id": "e67ae5ba8f66c04bde2d99f78a74af79e8092c196e094a65e199a258b696a18e",
            "internal": false,
            "ipam_config": [
              {
                "aux_address": {},
                "gateway": "",
                "ip_range": "",
                "subnet": "fc00:f853:ccd:e793::/64"
              },
              {
                "aux_address": {},
                "gateway": "172.18.0.1",
                "ip_range": "",
                "subnet": "172.18.0.0/16"
              }
            ],
            "name": "kind",
            "options": {
              "com.docker.network.bridge.enable_ip_masquerade": "true",
              "com.docker.network.driver.mtu": "65535"
            },
            "scope": "local"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.kind",
      "mode": "managed",
      "type": "kind_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/tehcyx/kind\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_certificate": "-----BEGIN CERTIFICATE-----\nMIIDITCCAgmgAwIBAgIIGkixemEbEYYwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczAeFw0yNDAxMDUxNjQ0MjZaFw0yNTAxMDQxNjQ0MjdaMDQx\nFzAVBgNVBAoTDnN5c3RlbTptYXN0ZXJzMRkwFwYDVQQDExBrdWJlcm5ldGVzLWFk\nbWluMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxRyYc0y0b+Rc8dP2\nR7AAarzGS2VYEV4t+aFd3QDu7d2MRZ7+dkZZMYUkFX1T/1AeZwLyDYHOXrnZEgxG\n6zsNBBXosQYbOwyVwegXabmMAGNkdAupi/Qwwu3olRd59Fmgrp+tK491zMF7I9eT\nq2VP1HyjQdAgcm/mI2TM2uqIT2fEvnrh38r5RjelQRMpRTFig8Qg3k8fDk+VsN5o\n2mwaLrnABJw9g+MbqR8n3h37WKugxjJGmQsQpoLtTQ9aSmhofKutFuJaGtnp3PoE\nt7wXW+mlbcrW7l96j6LcUMCN5KGPKU7UVeT7TjD0S9KV0LWJtnfXqPovMC+GzzMv\nToHzxQIDAQABo1YwVDAOBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBRTNPDTnMSJ8RtooJktb9JEktB0\nEzANBgkqhkiG9w0BAQsFAAOCAQEAnpWzjAgAX8PESpcoqEDB9Yg7GJzTi7y1Wr3T\n6R3gcsSN+WUpwPB9mGhKzJrn/PJyRmBKHpFVz3ndi30L0sQOX+vYiCdBNKwHONh5\nbPGOg90TKKEUD4mcYIyHxanROTOZnEBluR5y1u/kVdXXaf6ck0FP21pNs4oQS8Ei\nD/jqQp392Jx4F7tvsJfeUxYh6qwv/x/AwWTq9TIWj6Tfdx1S/L3IK6js+n26N4ms\nsgsQPKexl9yaiTf1GAMHFsNDr6hbbzmYpss4TbtsWjQ8oZG81IydIei6KnwCNtls\nKz9v255sP0vHU5BOz6TIyltmvQojeAkx+vvay5Mg6iYpOOfxiw==\n-----END CERTIFICATE-----\n",
            "client_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxRyYc0y0b+Rc8dP2R7AAarzGS2VYEV4t+aFd3QDu7d2MRZ7+\ndkZZMYUkFX1T/1AeZwLyDYHOXrnZEgxG6zsNBBXosQYbOwyVwegXabmMAGNkdAup\ni/Qwwu3olRd59Fmgrp+tK491zMF7I9eTq2VP1HyjQdAgcm/mI2TM2uqIT2fEvnrh\n38r5RjelQRMpRTFig8Qg3k8fDk+VsN5o2mwaLrnABJw9g+MbqR8n3h37WKugxjJG\nmQsQpoLtTQ9aSmhofKutFuJaGtnp3PoEt7wXW+mlbcrW7l96j6LcUMCN5KGPKU7U\nVeT7TjD0S9KV0LWJtnfXqPovMC+GzzMvToHzxQIDAQABAoIBAQCsLB8pz11owyNA\nhLIBykWC9mOK5fn4Kbik7QPNEIyjLzrgcVG5xBcSv0ZWkwN05um3dwYxMCov6cwn\nDJxBynHDGNQJFNliScrh9jXFPrKAgFD1YF53hhO1oRPgbwIyortM7OLZQtVVxccm\n9p3hP3xskXYU/ZPqAb4XOmwJ6ISqPeHsmBQHCefox7toLIebs7MToRJ8ssQNd6o2\n5aGyzYmgklI/C9Crkx6zpTMxz0K1/R098TjIZy2oiMJp0j3q5VWcphrQWNL7dOVG\nWcpLzY8qeAclHujSNky/CyL/MBRu44QErTLEr/dw/bOhWnzuxscOJGewt/PXAS5b\nykC545u9AoGBAMkDid85kKZWPJtFShbWuZVCxZAaweqSAtBDIc5RFn3ajuwt+xbj\nNtne6fQ7PELWWlpb0iMiB4Y5Dpa0+eakFA1mdB8cjilytn7VwEQj1kGidf9e9eq4\nY3+AYQFyBp7fJN5pqv94EQcheYxWhQnSs7e0YEckfIxLuEVXpnEwdaXHAoGBAPsH\nzUNIX8b6e4TWwxErXBOJ98o1M7eBXjDrdXy18Q5ArbOaP4mGOM5y7Zi+afCwk6JW\nXZ89AM24GEccAUsJ8BdWAckdF2Vpa0Q7gxKHcH54ki5HcCoIBmMik6uOA+ORmqz2\n5AC4MnuFJ3jG9YAuMuEGiQCPArGh4vLvKOhCzCoTAoGAdnkRb3FcIc091z3VVvSj\nWKeMDUzX8cqwwdJvQExmdzKzfdvz2x97mplZRksLT1FK22q2xWIvERrb0FNF3nvi\nHau+0P9hgmhLyyFsOjzs8K4x4Zs0UWzvp5wgkFuGL2jRMA0TbZJ0ZsGCBAaSTqHS\nrnkvLX8BsSaHqsboIFoxXM0CgYEA9Fmuywx69mPBsheev2q2cOp+gZzx33EU74dy\n0FcF8vqwWkAOEt7NEuA6ONE4rColOwLYlPU7gAPv1eADvjhJNV3p1Qr1SCiqWjuX\npYSi0uioWlX9b1xqYzs4BOjzDiQgLLcST0T9FtERD/aS6BeQPQwwdZO/aosLL6/u\n4M6Mj3MCgYBah2K7ciORa1Kz1WAkwVZzl2HtVSXuXkL6P+9dUeU8W7AVF6NqB00t\ngI/pbb8uN8xpucoIiZSgBm550ZP/7pRjpbj3ruhMC+crY80OtqJsfMRYhoL0GICa\nCKKc6jq4wcQtWNR1ExWk0qP85zvQL4iY81t5c2cwYNuUGAsVDCadEw==\n-----END RSA PRIVATE KEY-----\n",
            "cluster_ca_certificate": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTI0MDEwNTE2NDQyNloXDTM0MDEwMjE2NDQyNlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALSK\nuh+qeFOtDgEX9KCgLORFO9DtMCHVGh27rkISZihE6Jheoj2lmYRbX4YX/PbyFgbX\nxdLBFqBUGYEeotvcxqndoErya3pj9yRLPbGbRFdfAg70ECCM0RU8+YOlggso+Yq7\nHF4CtkkffNkbkCbwmTPrF8FLXAPBhWP9/JHPdQbrrqKL4rj0SxITiIR89wHXT1R6\nCf9Ypob4H1s+1ZYKHzm206S34ii25VawaBk/cjaD0adhVixMYAw8g1G3gHgdhAht\nixkRjQQbicgf1Z3Gel+WgmwvHwxcmvrLGP+H9rrC/CK+zPv2kDVyJP3Nws8V76hV\nE8BtlRqkMCc311Bb9MUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFFM08NOcxInxG2igmS1v0kSS0HQTMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBAA9rW3ri0OLWBZsq4vNY\ndouwQwGCn+RrFfnChalPpovneX9+0Mx8JVuvrT0Qk103zHYlYLevmz7cp0pFcC71\nFrjUlVrqrzwhezIbJGFVeNoZxSaYd5ELAm1cn1CRzglB2w3t7Zv7ErqE+LbfUuz2\nHtfDvq9077bZeoB1eCILPTBp5wy6fvwl10dhXS8/dquxRxG+N9Z+QwAdHy6GNYtW\nuhee7JLa8+ZwOY3ZPDhLX/1vx+wqXSI1SrCIYCLQem0Yxs4sJE3s7eDAhKOgKKtk\nrmPQZcNj1K31z13OkDUInOibXWxhLm2HiRrx23MD8OgsVH1Vwa52UKb7rhw/lqf2\nneM=\n-----END CERTIFICATE-----\n",
            "completed": true,
            "endpoint": "https://127.0.0.1:58468",
            "id": "kind-kindest/node:v1.27.1",
            "kind_config": [
              {
                "api_version": "kind.x-k8s.io/v1alpha4",
                "containerd_config_patches": null,
                "feature_gates": null,
                "kind": "Cluster",
                "networking": [],
                "node": [
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": null,
                    "labels": null,
                    "role": "control-plane"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": null,
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": null,
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  },
                  {
                    "extra_mounts": [],
                    "extra_port_mappings": [],
                    "image": "",
                    "kubeadm_config_patches": null,
                    "labels": {
                      "platform": "modern-devops-stack"
                    },
                    "role": "worker"
                  }
                ],
                "runtime_config": null
              }
            ],
            "kubeconfig": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJME1ERXdOVEUyTkRReU5sb1hEVE0wTURFd01qRTJORFF5Tmxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFNLCnVoK3FlRk90RGdFWDlLQ2dMT1JGTzlEdE1DSFZHaDI3cmtJU1ppaEU2Smhlb2oybG1ZUmJYNFlYL1BieUZnYlgKeGRMQkZxQlVHWUVlb3R2Y3hxbmRvRXJ5YTNwajl5UkxQYkdiUkZkZkFnNzBFQ0NNMFJVOCtZT2xnZ3NvK1lxNwpIRjRDdGtrZmZOa2JrQ2J3bVRQckY4RkxYQVBCaFdQOS9KSFBkUWJycnFLTDRyajBTeElUaUlSODl3SFhUMVI2CkNmOVlwb2I0SDFzKzFaWUtIem0yMDZTMzRpaTI1VmF3YUJrL2NqYUQwYWRoVml4TVlBdzhnMUczZ0hnZGhBaHQKaXhrUmpRUWJpY2dmMVozR2VsK1dnbXd2SHd4Y212ckxHUCtIOXJyQy9DSyt6UHYya0RWeUpQM053czhWNzZoVgpFOEJ0bFJxa01DYzMxMUJiOU1VQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZGTTA4Tk9jeElueEcyaWdtUzF2MGtTUzBIUVRNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQTlyVzNyaTBPTFdCWnNxNHZOWQpkb3V3UXdHQ24rUnJGZm5DaGFsUHBvdm5lWDkrME14OEpWdXZyVDBRazEwM3pIWWxZTGV2bXo3Y3AwcEZjQzcxCkZyalVsVnJxcnp3aGV6SWJKR0ZWZU5vWnhTYVlkNUVMQW0xY24xQ1J6Z2xCMnczdDdadjdFcnFFK0xiZlV1ejIKSHRmRHZxOTA3N2JaZW9CMWVDSUxQVEJwNXd5NmZ2d2wxMGRoWFM4L2RxdXhSeEcrTjlaK1F3QWRIeTZHTll0Vwp1aGVlN0pMYTgrWndPWTNaUERoTFgvMXZ4K3dxWFNJMVNyQ0lZQ0xRZW0wWXhzNHNKRTNzN2VEQWhLT2dLS3RrCnJtUFFaY05qMUszMXoxM09rRFVJbk9pYlhXeGhMbTJIaVJyeDIzTUQ4T2dzVkgxVndhNTJVS2I3cmh3L2xxZjIKbmVNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://127.0.0.1:58468\n  name: kind-kind\ncontexts:\n- context:\n    cluster: kind-kind\n    user: kind-kind\n  name: kind-kind\ncurrent-context: kind-kind\nkind: Config\npreferences: {}\nusers:\n- name: kind-kind\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJR2tpeGVtRWJFWVl3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBeE1EVXhOalEwTWpaYUZ3MHlOVEF4TURReE5qUTBNamRhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhSeVljMHkwYitSYzhkUDIKUjdBQWFyekdTMlZZRVY0dCthRmQzUUR1N2QyTVJaNytka1paTVlVa0ZYMVQvMUFlWndMeURZSE9Ycm5aRWd4Rwo2enNOQkJYb3NRWWJPd3lWd2VnWGFibU1BR05rZEF1cGkvUXd3dTNvbFJkNTlGbWdycCt0SzQ5MXpNRjdJOWVUCnEyVlAxSHlqUWRBZ2NtL21JMlRNMnVxSVQyZkV2bnJoMzhyNVJqZWxRUk1wUlRGaWc4UWczazhmRGsrVnNONW8KMm13YUxybkFCSnc5ZytNYnFSOG4zaDM3V0t1Z3hqSkdtUXNRcG9MdFRROWFTbWhvZkt1dEZ1SmFHdG5wM1BvRQp0N3dYVyttbGJjclc3bDk2ajZMY1VNQ041S0dQS1U3VVZlVDdUakQwUzlLVjBMV0p0bmZYcVBvdk1DK0d6ek12ClRvSHp4UUlEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSVE5QRFRuTVNKOFJ0b29Ka3RiOUpFa3RCMApFekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbnBXempBZ0FYOFBFU3Bjb3FFREI5WWc3R0p6VGk3eTFXcjNUCjZSM2djc1NOK1dVcHdQQjltR2hLekpybi9QSnlSbUJLSHBGVnozbmRpMzBMMHNRT1grdllpQ2RCTkt3SE9OaDUKYlBHT2c5MFRLS0VVRDRtY1lJeUh4YW5ST1RPWm5FQmx1UjV5MXUva1ZkWFhhZjZjazBGUDIxcE5zNG9RUzhFaQpEL2pxUXAzOTJKeDRGN3R2c0pmZVV4WWg2cXd2L3gvQXdXVHE5VElXajZUZmR4MVMvTDNJSzZqcytuMjZONG1zCnNnc1FQS2V4bDl5YWlUZjFHQU1IRnNORHI2aGJiem1ZcHNzNFRidHNXalE4b1pHODFJeWRJZWk2S253Q050bHMKS3o5djI1NXNQMHZIVTVCT3o2VEl5bHRtdlFvamVBa3grdnZheTVNZzZpWXBPT2Z4aXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFJ5WWMweTBiK1JjOGRQMlI3QUFhcnpHUzJWWUVWNHQrYUZkM1FEdTdkMk1SWjcrCmRrWlpNWVVrRlgxVC8xQWVad0x5RFlIT1hyblpFZ3hHNnpzTkJCWG9zUVliT3d5VndlZ1hhYm1NQUdOa2RBdXAKaS9Rd3d1M29sUmQ1OUZtZ3JwK3RLNDkxek1GN0k5ZVRxMlZQMUh5alFkQWdjbS9tSTJUTTJ1cUlUMmZFdm5yaAozOHI1UmplbFFSTXBSVEZpZzhRZzNrOGZEaytWc041bzJtd2FMcm5BQkp3OWcrTWJxUjhuM2gzN1dLdWd4akpHCm1Rc1Fwb0x0VFE5YVNtaG9mS3V0RnVKYUd0bnAzUG9FdDd3WFcrbWxiY3JXN2w5Nmo2TGNVTUNONUtHUEtVN1UKVmVUN1RqRDBTOUtWMExXSnRuZlhxUG92TUMrR3p6TXZUb0h6eFFJREFRQUJBb0lCQVFDc0xCOHB6MTFvd3lOQQpoTElCeWtXQzltT0s1Zm40S2JpazdRUE5FSXlqTHpyZ2NWRzV4QmNTdjBaV2t3TjA1dW0zZHdZeE1Db3Y2Y3duCkRKeEJ5bkhER05RSkZObGlTY3JoOWpYRlByS0FnRkQxWUY1M2hoTzFvUlBnYndJeW9ydE03T0xaUXRWVnhjY20KOXAzaFAzeHNrWFlVL1pQcUFiNFhPbXdKNklTcVBlSHNtQlFIQ2Vmb3g3dG9MSWViczdNVG9SSjhzc1FOZDZvMgo1YUd5elltZ2tsSS9DOUNya3g2enBUTXh6MEsxL1IwOThUaklaeTJvaU1KcDBqM3E1VldjcGhyUVdOTDdkT1ZHCldjcEx6WThxZUFjbEh1alNOa3kvQ3lML01CUnU0NFFFclRMRXIvZHcvYk9oV256dXhzY09KR2V3dC9QWEFTNWIKeWtDNTQ1dTlBb0dCQU1rRGlkODVrS1pXUEp0RlNoYld1WlZDeFpBYXdlcVNBdEJESWM1UkZuM2FqdXd0K3hiagpOdG5lNmZRN1BFTFdXbHBiMGlNaUI0WTVEcGEwK2Vha0ZBMW1kQjhjamlseXRuN1Z3RVFqMWtHaWRmOWU5ZXE0ClkzK0FZUUZ5QnA3ZkpONXBxdjk0RVFjaGVZeFdoUW5TczdlMFlFY2tmSXhMdUVWWHBuRXdkYVhIQW9HQkFQc0gKelVOSVg4YjZlNFRXd3hFclhCT0o5OG8xTTdlQlhqRHJkWHkxOFE1QXJiT2FQNG1HT001eTdaaSthZkN3azZKVwpYWjg5QU0yNEdFY2NBVXNKOEJkV0Fja2RGMlZwYTBRN2d4S0hjSDU0a2k1SGNDb0lCbU1pazZ1T0ErT1JtcXoyCjVBQzRNbnVGSjNqRzlZQXVNdUVHaVFDUEFyR2g0dkx2S09oQ3pDb1RBb0dBZG5rUmIzRmNJYzA5MXozVlZ2U2oKV0tlTURVelg4Y3F3d2RKdlFFeG1kekt6ZmR2ejJ4OTdtcGxaUmtzTFQxRksyMnEyeFdJdkVScmIwRk5GM252aQpIYXUrMFA5aGdtaEx5eUZzT2p6czhLNHg0WnMwVVd6dnA1d2drRnVHTDJqUk1BMFRiWkowWnNHQ0JBYVNUcUhTCnJua3ZMWDhCc1NhSHFzYm9JRm94WE0wQ2dZRUE5Rm11eXd4NjltUEJzaGVldjJxMmNPcCtnWnp4MzNFVTc0ZHkKMEZjRjh2cXdXa0FPRXQ3TkV1QTZPTkU0ckNvbE93TFlsUFU3Z0FQdjFlQUR2amhKTlYzcDFRcjFTQ2lxV2p1WApwWVNpMHVpb1dsWDliMXhxWXpzNEJPanpEaVFnTExjU1QwVDlGdEVSRC9hUzZCZVFQUXd3ZFpPL2Fvc0xMNi91CjRNNk1qM01DZ1lCYWgySzdjaU9SYTFLejFXQWt3Vlp6bDJIdFZTWHVYa0w2UCs5ZFVlVThXN0FWRjZOcUIwMHQKZ0kvcGJiOHVOOHhwdWNvSWlaU2dCbTU1MFpQLzdwUmpwYmozcnVoTUMrY3JZODBPdHFKc2ZNUllob0wwR0lDYQpDS0tjNmpxNHdjUXRXTlIxRXhXazBxUDg1enZRTDRpWTgxdDVjMmN3WU51VUdBc1ZEQ2FkRXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\n",
            "kubeconfig_path": "/Users/leonardocosouza/PycharmProjects/data-flow-nifi-flink/kind-config",
            "name": "kind",
            "node_image": "kindest/node:v1.27.1",
            "timeouts": null,
            "wait_for_ready": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjMwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "data",
      "type": "kubernetes_service",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "module": "module.traefik",
      "mode": "data",
      "type": "utils_deep_merge_yaml",
      "name": "values",
      "provider": "provider[\"registry.terraform.io/cloudposse/utils\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "append_list": false,
            "deep_copy_list": false,
            "id": "9ca690fc3267cb252cc52305f87dde1b289a5b7b",
            "input": [
              "\"traefik\":\n  \"additionalArguments\":\n  - \"--serversTransport.insecureSkipVerify=true\"\n  \"deployment\":\n    \"replicas\": \"2\"\n  \"fullnameOverride\": \"traefik\"\n  \"logs\":\n    \"access\":\n      \"enabled\": true\n  \"metrics\":\n    \"prometheus\":\n      \"service\":\n        \"enabled\": true\n      \"serviceMonitor\": {}\n  \"middlewares\":\n    \"redirections\":\n      \"withclustername\":\n        \"permanent\": false\n        \"regex\": \"apps.172-29-0-100.nip.io\"\n        \"replacement\": \"apps.kind.172-29-0-100.nip.io\"\n  \"ressources\":\n    \"limits\":\n      \"cpu\": \"250m\"\n      \"memory\": \"512Mi\"\n    \"requests\":\n      \"cpu\": \"125m\"\n      \"memory\": \"256Mi\"\n  \"tlsOptions\":\n    \"default\":\n      \"minVersion\": \"VersionTLS12\"\n"
            ],
            "output": "traefik:\n  additionalArguments:\n  - --serversTransport.insecureSkipVerify=true\n  deployment:\n    replicas: \"2\"\n  fullnameOverride: traefik\n  logs:\n    access:\n      enabled: true\n  metrics:\n    prometheus:\n      service:\n        enabled: true\n      serviceMonitor: {}\n  middlewares:\n    redirections:\n      withclustername:\n        permanent: false\n        regex: apps.172-29-0-100.nip.io\n        replacement: apps.kind.172-29-0-100.nip.io\n  ressources:\n    limits:\n      cpu: 250m\n      memory: 512Mi\n    requests:\n      cpu: 125m\n      memory: 256Mi\n  tlsOptions:\n    default:\n      minVersion: VersionTLS12\n"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "argocd_project",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/oboukili/argocd\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "traefik",
            "metadata": [
              {
                "annotations": {
                  "modern-devops-stack.io/argocd_namespace": "cicd"
                },
                "generation": 1,
                "labels": null,
                "name": "traefik",
                "namespace": "cicd",
                "resource_version": "880",
                "uid": "440eb4c2-e2eb-450b-bcb7-eacaa4c66882"
              }
            ],
            "spec": [
              {
                "cluster_resource_blacklist": [],
                "cluster_resource_whitelist": [
                  {
                    "group": "*",
                    "kind": "*"
                  }
                ],
                "description": "Traefik application project",
                "destination": [
                  {
                    "name": "in-cluster",
                    "namespace": "traefik",
                    "server": ""
                  }
                ],
                "namespace_resource_blacklist": [],
                "namespace_resource_whitelist": [],
                "orphaned_resources": [
                  {
                    "ignore": [],
                    "warn": true
                  }
                ],
                "role": [],
                "signature_keys": null,
                "source_namespaces": null,
                "source_repos": [
                  "https://github.com/leonardocosouza/data-flow-nifi-flink.git"
                ],
                "sync_window": []
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.helm_release.argocd",
            "module.argocd_bootstrap.jwt_hashed_token.argocd",
            "module.argocd_bootstrap.null_resource.this",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "null_resource",
      "name": "dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "865129680544053028",
            "triggers": {
              "argocd": "6440763636397568288"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "module.argocd_bootstrap.data.utils_deep_merge_yaml.values",
            "module.argocd_bootstrap.helm_release.argocd",
            "module.argocd_bootstrap.jwt_hashed_token.argocd",
            "module.argocd_bootstrap.null_resource.this",
            "module.argocd_bootstrap.random_password.argocd_server_secretkey",
            "module.argocd_bootstrap.random_uuid.jti",
            "module.argocd_bootstrap.time_static.iat",
            "module.kind.kind_cluster.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.traefik",
      "mode": "managed",
      "type": "null_resource",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": []
    }
  ],
  "check_results": null
}
